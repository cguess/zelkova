# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: ignore
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/eikon/all/eikon.rbi
#
# eikon-b84194a7cee7

module Eikon
  def self.dhash_for_image(*args, ****, &blk); end
  def self.dhash_for_video(*args, ****, &blk); end
  def self.distance_between_files(*args, ****, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Eikon::Comparator
  def self.compare(*args, ****, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Eikon::VideoProcessor
  def file_name(*args, ****, &blk); end
  def get_file_name(*args, ****, &blk); end
  def get_frames_dhash(*args, ****, &blk); end
  def initialize(*args, ****, &blk); end
  def setup_tmp_folder(*args, ****, &blk); end
  def split_video_into_images(*args, ****, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Eikon::ImageProcessor
  def byte_array(*args, ****, &blk); end
  def filename(*args, ****, &blk); end
  def generate_byte_array(*args, ****, &blk); end
  def initialize(*args, ****, &blk); end
  def preprocess_image(*args, ****, &blk); end
  extend T::Private::Methods::MethodHooks
  extend T::Private::Methods::SingletonMethodHooks
  extend T::Sig
end
class Eikon::Error < StandardError
end
